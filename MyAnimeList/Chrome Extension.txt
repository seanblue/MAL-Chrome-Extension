** Bugs **
# API splits English title by comma even though there should only be one english title.
	Causes an issue for http://myanimelist.net/anime/14741/Chuunibyou_demo_Koi_ga_Shitai! 
	Also http://myanimelist.net/anime/19815/No_Game_No_Life

** Features **

['@' = not done]
['#' = done]

@ Use chrome.storage.local (permission "storage") to so that data can still be loaded even if the API is down.
	- How should this be handled to take new data if updated, but not copy over bad data?
	- Also add check that xhr.status or event.target.status is 200 before trying to save data.
	- Could instead do a general API check, using a single specific anime.
		- This allows me not to not break and set a flag inside the anime loading loop if 500 error by knowing ahead of time.
		- This allows me to replace the "Loading anime data" text with something like "Anime data could not be loaded".
	- Could use jQuery.extend so that if new data fields are corrupted with nulls, they would not replace good data.
		- Only undefined values are ignored (despite what jQuery docs say), so would need to replace null with undefined for this to work.
	- Will likely need to figure out how to work with 'animeData' and 'animeDataBySection' for local storage.
		- Probably don't want to save by section since that can change between loads.
		- If only 'animeData' is saved, would need to do the mapping to 'animeDataBySection' entirely afterward, separate from the loading, even if API is down.
		- The additional details ('addAdditionalDetails()') probably shouldn't be saved locally.
	- Also store the date that the anime data was retrieved. That way, if the data can't be retrieved, the UI can indicate how old the data being used is.

@ See if function addTagsToAnimeDetails can be modified to iterate over each anime rather than the divs, so that the undefined check for test limit isn't necessary.

@ Styles: Look into settings page where the user can select the style of the anime page. That way, the rows and popover can be colored accordingly.
		
@1. Show popover with additional information.
	# Title
	# English Title (if available)
	# Average Score ('members_score')
	# Rank (rank)
	# Popularity (popularity_rank)
	# Number of Favorites ('favorited_count')
	# Genres (genres[])
	# Date Aired ('start_date' and 'end_date')
	@ Show total number of user votes in parentheses after average score (need to add to API)
#2. Filtering
	# Genre (genres[])
	# Type (type) ['TV', 'Movie', etc.]
	# Rating (classification) ['PG-13', etc. but with the description afterward]
	# Tag (would require page parsing)
		# Don't show Tag option if there is no Tags column on the page.
		# Add comma separated search to show if any of the requested tags is present.
	# Title (quicker than scrolling; check alternate titles)
		# Add comma separated search to show if any of the requested titles is present.
	# Synopsis
	# Status
	# Display "showing x of y" in parentheses after section headers ("Watching", etc.)
	# Update row colors to alternate when filtered.
	# Update row numbers (first column) when filtered.
@3. Sorting
	# Title
	# Average Score
	# Rank
	# Popularity
	# Number of Favorites
	# Rating
	# Start Date and End Date
	@ Number of votes (need to add to API)
	# Number of episodes ('episodes')
	# Automatically sort alphabetically as a secondary sort.
	# Reverse sort (check box).
#4. New Section
	# Move Filter/Sorting to area below main black bar to allow for more room and customization of styles.
	# Add text "Loading anime data..." while api calls are being made so that users know that it is still running.
		# Could show "x of y" anime loaded.